---
#
# Unexposed
#
st_install_list: ["python3-lxml"]
st_wan_ip: '127.0.0.1'
st_relay_remote_certs_exist: False
st_relay_local_certs_exist: False

#
# Exposed to a user
#
st_install_client: False
st_install_disco: False
st_install_relay: False
st_reinstall: False
st_certs_path: '{{ role_path }}/files/certs/{{ inventory_hostname }}'

# Syncthing client --------------------------------------------------------------------------------

st_client: {
  'addr': '' ,                  # Address on which Client will listen, default: 127.0.0.1
  'addr_use_wan': true,         # Overwrite `st_client.addr` with the discovered WAN ip?
  'announce_broadcast': true,   # Enable "local discovery"?
  'certs_import': false,         # Save existing certificates?
  'certs_recreate': true,       # Re-create certificates? Yields new ID.
  'config_dir': '',             # Will be replaced with $XDG_CONFIG_HOME/syncthing if empty
  'gui': true,
  'gui_tls': true,
  'gui_user': '',               # GUI/API username
  'gui_user_password': '',      # GUI user password, will be hashed using BCrypt
  'min_free_space': 5,          # Minimum free disk space to keep
  'nat': false,                 # Uses upstream-controlled STUN
  'port': 8384,                 # Port on which Client's GUI/API will listen, default: 8384
  'reconfigure': true,          # Overwrite existing config?
  'untrusted': true,            # Set device as "untrusted" by default?

  'user': {
    'name': '',                 # Defaults to SSH user
    'home': '',                 # Will be replaced with $HOME if empty
    },

  'default_folder': {
    'path': '~/sync/default',   # Will be created if does not exist
    'type': 'sendreceive',      # `receiveencrypted` can't be set on the *default* folder
    'pause': True
    },

  'disco': {
    'addr': '127.0.0.1',        # Discovery-server to which Client will connect
    'addr_overwrite': true,     # Overwrite Disco address with the server from this role?
    'port': 8443,               # Port on which Client will try to find Disco, default: 8443
    'id': '',                   # ID of Disco to which Client will connect
    'id_overwrite': true,       # Overwrite `st_client.disco.id` with the `st_disco.id`?
    'enable': true              # Use "global announcements" aka Discovery-server?
    },

  'relay': {
    'addr': '',
    'addr_overwrite': true,     # Overwrite Relay address with the server from this role?
    'enable': true,             # Enable relaying?
    'id': '',
    'id_overwrite': true,       # Overwrite `st_client.relay.id` with the `st_relay.id`?
    'port': 22067,
    'reconnect_interval_minutes': 10
    },

  'start': {                    # Configure autostart via systemd
    'on_boot': true,
    'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
  },

  'binary': {
    'shasum': '8dfb9a46563257f859867f8e9ded16efac612617de938b95e35c8ca887dadf16',
    'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.3_linux/syncthing',
    },

  'binary_arm64': {
    'shasum': 'ac8ea395590330353019a4424e429e5125e5cfd9b0e6afdd57e085ffeed38485',
    'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.3_aarch64/syncthing',
    }
}

# Discovery-server --------------------------------------------------------------------------------

st_disco: {
  'addr': '127.0.0.1',         # Address on which Disco listens itself
  'addr_use_wan': true,        # Use discovered WAN IP instead of the provided address?
  'certs_import': false,        # Save existing certificates?
  'certs_recreate': true,      # Re-create certificates? Yields new ID.
  'id': '',                    # Disco's own ID, *will* be overwritten during run
  'port': 8443,                # Port on which Disco will listen itself, default: 8443
  'replicate': false,          # Add `st_disco_replica` into the systemd config?

  'replica': {
    'addr': '10.0.0.1',        # Address which Disco will use for replication
    'port': 19200,             # Port which Disco will use for replication
    'id': '',                  # ID of another replica instance
    'listen_addr': '10.0.0.2', # Address for incoming replication connections
    'listen_port': 19200,      # Port for incoming replication connections, default: 19200
    },

  'start': {                   # Configure autostart via systemd
    'on_boot': true,
    'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
  },

  'binary': {
    'shasum': '5abc9253cdd7c65111876728867428ffc1547baea4b13cf6d56cc0abe2e3a98a',
    'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.3_linux/stdiscosrv',
    }
}

# Relay -------------------------------------------------------------------------------------------

st_relay: {
  'addr': '',
  'addr_use_wan': true,
  'certs_export': false,       # Upload existing certificates?
  'certs_import': false,       # Save existing certificates?
  'certs_recreate': true,
  'network_timeout_string': '2m0s',
  'ping_interval_string': '1m0s',
  'port': 22067,

  'nat': {
    'enabled': false,          # Use UPnP/NAT-PMP to acquire external port mapping?
    'lease_minutes': 60,
    'renewal_minutes': 30,
    'timeout_seconds': 10
  },

  'start': {                   # Configure autostart via systemd
    'on_boot': true,
    'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
  },

  'binary': {
    'shasum': 'bd6cff6894c104ff715c60c0522f484d9b00e36719340bd965da9566219e86cc',
    'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.3_linux/strelaysrv'
  }
}
