-- Listen locally, ipv4-only
net = { '{{ base_kresd_listen_on_ip }}' }
net.ipv6 = false

-- Enable optional modules
modules = {
  'policy',              -- NXDOMAIN "bad" queries
  'hints',               -- read /etc/hosts and whatever is defined below
  'stats',               -- internal statistics
  'serve_stale < cache', -- serve stale record if parent NS is unreachable
  'rebinding < iterate', -- prevent rebinding attack
  'prefill',
  'predict',
  'view'
}

-- Accept only from localhost
view:addr('127.0.0.1/8', function (req, qry) return policy.PASS end)
view:addr('0.0.0.0/0', function (req, qry) return policy.DROP end)

-- Block Firefox DoH
policy.add(policy.suffix(policy.DENY, {todname('use-application-dns.net')}))

{% if base_kresd_blocklist %}
-- Add blocked hosts, reload on file change
-- MUST be in a special .RPZ format
-- https://knot-resolver.readthedocs.io/en/stable/modules-policy.html#policy.rpz
policy.add(policy.rpz(policy.DENY, '{{ base_kresd_blocklist }}'))
{% endif %}

-- DEBUG: `base_kresd_tls` is {{ base_kresd_tls }}
{% if base_kresd_tls %}
-- DNS-over-TLS
policy.add(policy.all(policy.TLS_FORWARD({
  {'{{ base_kresd_primary_ip }}', hostname='{{ base_kresd_primary_hostname }}'},
  {'{{ base_kresd_secondary_ip }}', hostname='{{ base_kresd_secondary_hostname }}'}
})))
{% else %}
-- DNS-over-UDP
policy.add(policy.all(policy.FORWARD({'{{ base_kresd_primary_ip }}', '{{ base_kresd_secondary_ip }}'})))
{% endif %}

--- Root zone preload
prefill.config({
  ['.'] = {
    url = 'https://www.internic.net/domain/root.zone',
    ca_file = '/etc/ssl/certs/ca-certificates.crt',
    interval = 86400  -- 24h
  }
})

-- Cache config
cache.size = 32 * MB
cache.max_ttl(172800) -- 48h
cache.min_ttl(60) -- 1m

--- Prefetch learning (15-minute blocks over 24 hours)
predict.config({
  window = 15,         -- 15 minutes sampling window
  period = 24*(60/15)  -- track last 24 hours
})
