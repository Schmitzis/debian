---
- name: Stat /etc/ssh/moduli
  stat:
    path: '/etc/ssh/moduli'
  register: st_moduli

- name: Check if hash of the current moduli matches the default ones
  set_fact:
    moduli_are_default: True
  when: not st_moduli.stat['exists'] or
    (st_moduli.stat['checksum'] == "6541fc14923473fcd2e04c98248c9ef2613050b1"
      or st_moduli.stat['checksum'] == "a4b506a8095b6598a1dad573fd492bbb047b31ad"
      or st_moduli.stat['checksum'] == "77e7851b030f0dfdcddd792890bf7c1f39e63333"
      or st_moduli.stat['checksum'] == "6927efa12479c2e0637b31f823b15640c73268a5"
    )

- name: Install non-default moduli
  copy:
    src: conf/moduli
    dest: /etc/ssh
    mode: 0644
  when: not base_generate_moduli and moduli_are_default

- name: Generate primes pool
  shell: ssh-keygen -M generate -O bits=4096 "{{ ansible_env.HOME }}/moduli.in"
  when: moduli_are_default and base_generate_moduli
  register: primes_pool_is_ready

- name: Select primes
  shell: ssh-keygen -M screen -f "{{ ansible_env.HOME }}/moduli.in" "{{ ansible_env.HOME }}/moduli.out"
  when: primes_pool_is_ready.changed # noqa 503
  register: primes_are_ok

- name: Copy output
  copy:
    src: '{{ ansible_env.HOME }}/moduli.out'
    dest: /etc/ssh/moduli
    remote_src: true
    backup: True
  when: primes_are_ok.changed # noqa 503
  register: primes_are_copied

- name: Cleanup temp moduli
  file:
    path: '{{ item }}'
    state: absent
  with_items:
    - "{{ ansible_env.HOME }}/moduli.in"
    - "{{ ansible_env.HOME }}/moduli.out"
  when: primes_are_copied.changed # noqa 503

- name: Copy /etc/ssh/sshd_config
  copy:
    src: conf/sshd_config
    dest: /etc/ssh/sshd_config
    owner: root
    mode: 0644
  notify:
    - reconfigure sshd
    - restart sshd


- name: (Block) Improve SSHd compatibility
  block:

  - name: Enable less secure ciphers
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^Ciphers\s'
      line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-cbc'

  - name: Enable less secure MACs
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MACs\s'
      line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-256'

  when: base_sshd_less_secure
  # block_end (sshd_less_secure)

- name: (Block) Use fastest sane crypto available
  block:

  - name: Use AES128-GCM as the only cipher
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^Ciphers\s'
      line: 'Ciphers aes128-gcm@openssh.com'

  - name: Use uMAC128-ETM as the only MAC
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MACs\s'
      line: 'MACs umac-128-etm@openssh.com'

  when: base_sshd_accelerate
  # block_end (sshd_accelerate)
