---
- name: Utilities block
  block:

  - name: Create Perl modules folder
    file:
      path: '/usr/local/lib/site_perl/'
      state: directory

  - name: Copy diff-so-fancy, its dependencies and z.lua with czmod
    copy:
      src: 'bin/{{ item.src }}'
      dest: '{{ item.dest }}'
      mode: '{{ item.mode }}'
      owner: root
    with_items:
      - { src: 'diff-so-fancy.pl', dest: '/usr/local/bin/diff-so-fancy'             , mode: 'a+x'}
      - { src: 'DiffHighlight.pm', dest: '/usr/local/lib/site_perl/DiffHighlight.pm', mode: '0644'}
      - { src: 'z.lua'           , dest: '/usr/local/bin/z.lua'                     , mode: 'a+x' }
      - { src: 'czmod.bash'      , dest: '/usr/local/bin/czmod.bash'                , mode: 'a+x' }
      - { src: 'czmod'           , dest: '/usr/local/bin/czmod'                     , mode: 'a+x' }

  - name: Link `bar` and `fd` binaries to their commonly used names
    file:
      src: '{{ item.src }}'
      dest: '{{ item.dest }}'
      state: link
      force: True
      follow: False
    loop:
      - { src: '/usr/bin/batcat', dest: '/usr/bin/bat' }
      - { src: '/usr/bin/fdfind', dest: '/usr/bin/fd' }

  - name: Install neovim and vifm without 'recommended' additions
    apt:
      name: '{{ pkg }}'
      install_recommends: False
    vars:
      pkg:
        - vifm
        - neovim
        - python3-neovim

  - name: Merge utilitites into the global install list
    set_fact:
      sw_list_global: '{{ sw_list_global | union(sw_list_utils) }}'

  when: sw_setup_utils
  # block end (Utilities)

- name: Merge Wayland into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_wayland) }}'
  when: sw_setup_wayland

- name: Configure swaylock PAM
  lineinfile:
    create: true
    line: 'auth include login'
    path: /usr/local/etc/pam.d/swaylock
    state: present
  when: sw_setup_wayland

- name: Merge clevis into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_clevis) }}'
  when: sw_setup_clevis

- name: Merge fonts into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_fonts) }}'
  when: sw_setup_fonts

- name: Merge fs into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_fs) }}'
  when: sw_setup_fs

- name: Merge dev into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_dev) }}'
  when: sw_setup_dev

- name: Merge office into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_office) }}'
  when: sw_setup_office

- name: Merge internet into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_internet) }}'
  when: sw_setup_internet

- name: Setup multimedia block
  block:

  - name: Merge multimedia into the global install list
    set_fact:
      sw_list_global: '{{ sw_list_global | union(sw_list_multimedia) }}'

  - name: Create mpd lyrics folder
    file:
      path: '{{ ansible_env.HOME }}/.cache/mpd/lyrics/'
      state: directory
      recurse: True
    become: False

  when: sw_setup_multimedia
  # Block end (multimedia)

  # Wireless
- name: Merge wireless into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_wireless) }}'
  when: sw_setup_wireless

- name: Merge audio into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_audio) }}'
  when: sw_setup_audio

- name: Merge virtio packages to the global list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(sw_list_virtio) }}'
  when: sw_virtio_install

- name: Merge ddcutil into the global install list
  set_fact:
    sw_list_global: '{{ sw_list_global | union(["ddcutil"]) }}'
  when: sw_setup_i2c

# -------------------------------

- name: Install selected packages
  apt:
    pkg: '{{ sw_list_global }}'
    state: present
    update-cache: True
  delay: 3
  retries: 3

- name: Install backports
  apt:
    pkg: '{{ sw_list_backports }}'
    state: present
    default_release: bullseye-backports
    install_recommends: False
  delay: 3
  retries: 3
  when: sw_list_backports | length > 0

# -------------------------------

- name: This has to be after the install step as i2c group & i2c-dev do not exist yet
  block:

  - name: Add user to i2c group
    user:
      append: True
      groups: i2c
      name: '{{ ansible_env.USER }}'

  - name: Load `i2c-dev` module on boot
    copy:
      content: 'i2c-dev'
      dest: /etc/modules-load.d/i2c-dev.conf
    become: true

  when: sw_setup_i2c
  # block end (i2c)


- name: Install user-provided *.deb files if there are any
  block:

    - name: Check if user-supplied .DEBs are installed
      command: 'dpkg-query -W {{ item }}'
      register: dpkg_check
      failed_when: dpkg_check.rc > 1
      changed_when: dpkg_check.rc == 1
      loop: '{{ sw_list_deb }}'

    - name: Create directory to store .deb files
      file:
        path: '{{ lookup("env", "TMPDIR") }}/st_deb'
        state: directory
      when: dpkg_check is changed

    - name: Copy .deb packages to the remote host
      copy:
        src: 'deb/{{ item }}'
        dest: '{{ lookup("env", "TMPDIR") }}/st_deb/{{ item }}'
      loop: '{{ sw_list_deb }}'
      register: debs_copy_status
      when: dpkg_check is changed

    - name: Install user-supplied .deb packages
      apt:
        allow_unauthenticated: True
        deb: '{{ item["dest"] }}'
      loop: '{{ debs_copy_status.results }}'
      when: ansible_architecture == "x86_64" and dpkg_check is changed

    - name: Delete temporarily storage folder
      file:
        path: '{{ lookup("env", "TMPDIR") }}/st_deb'
        state: absent
      when: dpkg_check is changed

  when: sw_list_deb | length > 0
  # block end
