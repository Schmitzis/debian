---
- hosts: all
  strategy: free
  tasks:

    #
    # All variables are documented in the respective README.md files for each role
    #

  - name: Execute `base` role
    import_role:
      name: base
    tags: role_base
    vars:
      base_allow_reboot: false             # Allow system reboot when necessary?
      base_autoupgrade: false              # Automatically upgrade from Buster to Bullsye?
      base_debsecan: true                  # Report applicable CVEs via `debsecan`
      base_disable_bluetooth: false
      base_disable_bt_autosuspend: false   # Disable bluetooth autosuspend?
      base_disable_firewire: true
      base_disable_hfs: true               # Disable HFS filesystem support?
      base_disable_nonsof: true            # Disable non-sof Intel HDA?
      base_disable_speaker: false          # Disable internal speaker?
      base_disable_thunderbolt: false
      base_enable_audit: false             # Enable AuditD?
      base_fb_configure: true              # Configure framebuffer?
      base_fb_font_size: 10x18             # Framebuffer font size
      base_fstab_noexec: true
      base_hda_options: []                 # snd-hda-intel module options
      base_fw_list:                        # Install under /lib/firmware/
        - { src: 'https://raw.githubusercontent.com/Realtek-OpenSource/android_hardware_realtek/rtk1395/bt/rtkbt/Firmware/BT/rtl8761b_config',
            dest: 'rtl_bt/rtl8761b_config.bin',
            checksum: 'sha256:aa86a092ee58e96256331d5c28c199ceaadec434460e98e7dea20e411e1aa570' }
        - { src: 'https://raw.githubusercontent.com/Realtek-OpenSource/android_hardware_realtek/rtk1395/bt/rtkbt/Firmware/BT/rtl8761b_fw',
            dest: 'rtl_bt/rtl8761b_fw.bin',
            checksum: 'sha256:0b59a1f2422c006837c4b5e46b59d49bfdbca1defb958adbbc0d57ebdc19cc82' }
      base_generate_moduli: false          # OpenSSH DH moduli
      base_grub_optional: "i8042.unlock=1" # list of optional GRUB parameters
      base_grub_timeout: 3                 # Boot timeout in seconds
      base_hide_pid: false                 # Disable acces to /proc in /etc/fstab
      base_init_on_free: false             # init_on_free=? kernel parameter
      base_install_recommends: true        # Install from APT-Recommends by default?
      base_locale: en_AU.UTF-8
      base_locale_singular: true           # Do not fetch other locales
      base_logind_configure: false
      base_logind_idle_action: suspend
      base_logind_idle_time: 600
      base_logind_lid_action: suspend
      base_logind_powerbutton_action: poweroff
      base_nmi_watchdog: false
      base_pam_namespace: false            # Private namespace with polyinstantiated directories
      base_pkg_remove:
        - wpasupplicant
        - rpcbind
        - exim4
        - bind9
        - avahi-daemon
        - dnsmasq
        - ntp
      base_reports_email: 'root'           # Mail reports to root user
      base_require_tty_pty: False          # `use_pty` & `requiretty`
      base_kresd_blocklist: ""
      base_kresd_install: true             # Install and configure knot-resolver (`kresd`)
      base_kresd_listen_on_ip: 127.0.0.1
      base_kresd_primary_hostname: dns.quad9.net
      base_kresd_primary_ip: 9.9.9.9
      base_kresd_secondary_hostname: dns.quad9.net
      base_kresd_secondary_ip: 149.112.112.112
      base_kresd_tls: true
      base_set_capslock: true              # Set CapsLock as CTRL key?
      base_set_dpkg_overrides: true        # Tighten permissions via `dpkg-statoverride`
      base_set_hostname: false             # Set target hostname to the inventory name
      base_set_sigenforce: true            # Enable module signing verification
      base_sleep_enabled: true             # Enable sleep & suspend?
      base_sshd_less_secure: false         # Less restrictive SSH ciphers & MACs
      base_sudo_cmd_nopwd: "/usr/bin/alsaucm"
      base_sudo_set: true
      base_sudo_user: '{{ ansible_env.USER }}'
      base_swappiness: 30
      base_thermald_profiles:
        - thermal-conf.xml.0
        - thermal-conf.xml.1
        - thermal-conf.xml.2
        - thermal-conf.xml.3
        - thermal-conf.xml.4
        - thermal-conf.xml.auto
      base_timezone: Australia/Adelaide
      base_trackpoint_drift: 25            # Fix drifting trackpoint cursor
      base_vm_writeback: 1500              # vm.dirty_writeback_centisecs


  - name: Execute `ufw` role
    import_role:
      name: ufw
    tags: role_ufw
    vars:
      ufw_enable: True
      ufw_limit_ssh: False
      ufw_logging: False
      ufw_operator_ip_whitelist: False
      ufw_policy: 'deny'
      ufw_reset: True                     # Remove all pre-existing rules
      ufw_rule:
        - { comment: 'Drop incoming TCP traffic from 172.16.17.92 to port 22',
            direction: 'in',
            from: '172.16.17.92',
            port: '22',
            proto: 'tcp',
            rule: 'deny' }
        - { comment: 'Allow all traffic from 192.168.122.*',
            direction: 'in',
            from: '192.168.122.0/16',
            port: '1:65000',
            proto: 'tcp',
            rule: 'allow' }
      ufw_service:
        - { comment: 'Reject Yahoo messenger from 192.168.67.83',
            rule: 'deny',
            from: '192.168.67.83',
            service: 'Yahoo' }


  - name: Execute `users` role
    import_role:
      name: users
    tags: role_users
    vars:
      users_remove: ['john', 'mary']
      users_add:
        - { name: 'ben',                   # User is skipped if left empty
            groups: ['new_group'],         # Groups are created if necessary
            home: '/home/ben',             # Can be left empty
            home_chown: True,              # Make $HOME owned by the user?
            password: '',                  # Use `'!'' to disable the account
            password_lock: False,          # `usermod -L` after creation?
            password_update: False,        # Update password if user exists?
            shell: '/bin/bash',            # Defaults to "/usr/sbin/nologin"
            ssh_add_all: True,             # Add everything under ~/.ssh/*.pub?
            ssh_add_clear: True,           # Remove existing authorised keys?
            ssh_add_keys: [                # Add specific keys from ~/.ssh/
              'secret.k',
              'id_rsa.pub'] }


  - name: Execute `software` role
    import_role:
      name: software
    tags: role_software
    vars:
      #
      # ALSA default output device
      #
      sw_alsa_out_card: 0
      sw_alsa_out_device: 0
      #
      # Toggle installation of a certain software list
      #
      sw_setup_audio: true
      sw_setup_clevis: true
      sw_setup_dev: true
      sw_setup_fonts: true
      sw_setup_fs: true
      sw_setup_i2c: true
      sw_setup_internet: true
      sw_setup_multimedia: true
      sw_setup_office: true
      sw_setup_utils: true
      sw_setup_wayland: true
      sw_setup_wireless: true
      #
      # Configure systemd units
      #
      sw_systemd_units_disable:
        - 'mpd.service'
        - 'rsync.service'
      sw_systemd_units_enable:
        - 'syncthing@{{ ansible_env.USER }}.service'
        - 'fstrim.timer'
        - 'iwd.service'
      sw_systemd_units_masked:
        - 'systemd-backlight@backlight:acpi_video0.service'
        - 'mpd.service'
      #
      # Configure libvirt / virt-manager
      #
      sw_virtio_install: true
      sw_virtio_network_autostart: true
      sw_virtio_use_default_network: true
      sw_virtio_user_addgroup: true
      #
      # Software lists
      #
      sw_list_deb: [] # .deb files added under `./roles/software/files/deb/`
      sw_list_backports: ['testssl.sh','diffoscope'] # install from `bullseye-backports`
      sw_list_clevis: ['clevis-initramfs','clevis-luks','clevis-systemd','clevis-tpm2']
      sw_list_wireless: ['blueman','bluez-firmware','iwd','wavemon']
      sw_list_fonts:
        - fonts-ibm-plex
        - fonts-powerline
        - fonts-recommended
        - fonts-terminus
        - fonts-terminus-otb
        - fonts-ubuntu
      sw_list_fs:
        - dosfstools
        - fuse-zip
        - fuse3
        - exfatprogs
        - fuseiso
        - gocryptfs
        - udisks2
      sw_list_dev:
        - ipython3
        - git
        - git-sizer
        - hexyl
        - libxml2-utils # xmllint
        - make
        - pax-utils
        - python3-pip
        - python3-virtualenv
        - strace
      sw_list_office:
        - antiword
        - catdoc
        - dbus-x11 # required by loffice even when running under Wayland
        - dictionaries-common
        - djvulibre-bin
        - docx2txt
        - html2text
        - hunspell
        - hunspell-en-au
        - liblibreofficekitgtk # loffice menus
        - libreoffice-gtk3
        - libreoffice-l10n-en-gb
        - libreoffice-style-sifr
        - mythes-en-au
        - odt2txt
        - pandoc
        - unrtf
        - wordnet
        - wordnet-sense-index
        - wv
      sw_list_internet:
        - bind9-dnsutils
        - filezilla
        - firefox-esr
        - firefox-esr-l10n-en-gb
        - neomutt
        - nmap
        - syncthing
        - weechat
      sw_list_multimedia:
        - atomicparsley # youtube-dl, merges covers into audio files
        - ffmpeg
        - id3v2
        - imv
        - libimage-exiftool-perl
        - mpd
        - mpv
        - ncmpcpp
        - youtube-dl
      sw_list_audio:
        - alsa-firmware-loaders
        - alsa-topology-conf
        - alsa-ucm-conf
        - alsa-utils
        - firmware-sof-signed
      sw_list_virtio:
        - virt-manager
        - libvirt-daemon-config-network
        - libvirt-daemon-config-nwfilter
        - libvirt-daemon-system
      sw_list_utils:
        - ack
        - apparmor-profiles
        - apparmor-profiles-extra
        - apparmor-utils
        - aria2
        - atool
        - bat
        - bc
        - checksec
        - curl
        - mtr-tiny
        - debian-goodies
        - debian-security-support # check-support-status
        - dfc
        - entr
        - fd-find
        - fzf
        - gawk
        - git
        - gnupg2
        - grc
        - hstr
        - htop
        - jq
        - linux-cpupower
        - ncal
        - ncdu
        - p7zip-full
        - pinentry-tty
        - powertop
        - rar
        - ripgrep
        - rpl
        - rsync
        - silversearcher-ag
        - sshfs
        - tmux
        - tree
        - universal-ctags
        - unzip
        - wget
        - whois
      sw_list_wayland:
        - adwaita-icon-theme
        - adwaita-qt
        - archivemount
        - brotli
        - colortest-python
        - command-not-found
        - foot
        - foot-terminfo
        - gcolor3
        - gnome-icon-theme
        - gnome-themes-standard
        - grim
        - keepassxc
        - libglib2.0-bin # gsettings
        - libplist-utils
        - libsixel-bin
        - light
        - lz4
        - mako-notifier
        - physlock
        - qt5ct
        - qtwayland5
        - rlwrap # cht.sh dependency
        - scdaemon
        - slurp # screen area selector
        - socat
        - sway
        - swaybg
        - swayidle
        - undertime
        - unicode-data
        - waybar
        - wdisplays
        - wf-recorder
        - wl-clipboard
        - wofi
        - xdg-utils # imv dependency
        - yubioath-desktop
        - zstd


  - name: Execute `dotfiles` role
    import_role:
      name: dotfiles
    tags: role_dotfiles
    vars:
      dots_change_tmux_prefix: false
      # Logic:
      #   - if `extract_dotfiles` is true, dotfiles are copied to the target host
      #   - if `extract_dotfiles` is false and target is localhost - link from the role
      #   - if `extract_dotfiles` is false and target is remote - fail gracefully
      dots_extract_dotfiles: false
      dots_bash_emacs_mode: false
      dots_remote_gitconfig: false
      dots_setup_fortunes: true
      dots_setup_neovim: true
      dots_repo_update: False
      dots_dotfiles_list:
        #
        # WARNING: Folders must end with '/'
        #
        # TODO:
        #   - Detect if src is a folder and append '/' automatically if it is not there.
        #
        - { src: 'Xresources'           , dest: '.Xdefaults'            , state: 'link' }
        - { src: 'aliases.sh'           , dest: '.config/aliases.sh'    , state: 'link' }
        - { src: 'bashrc'               , dest: '.bashrc'               , state: 'link' }
        - { src: 'config/bat/'          , dest: '.config/bat'           , state: 'link' }
        - { src: 'config/fontconfig/'   , dest: '.config/fontconfig'    , state: 'link' }
        - { src: 'config/foot/'         , dest: '.config/foot'          , state: 'link' }
        - { src: 'config/gtk-3.0/'      , dest: '.config/gtk-3.0'       , state: 'link' }
        - { src: 'config/imv/'          , dest: '.config/imv'           , state: 'link' }
        - { src: 'config/luakit/'       , dest: '.config/luakit'        , state: 'link' }
        - { src: 'config/mako/config'   , dest: '.config/mako/config'   , state: 'hard' }
        - { src: 'config/mpd/'          , dest: '.config/mpd'           , state: 'link' }
        - { src: 'config/mpv/'          , dest: '.config/mpv'           , state: 'link' }
        - { src: 'config/ncmpcpp/'      , dest: '.config/ncmpcpp'       , state: 'link' }
        - { src: 'config/qt5ct/'        , dest: '.config/qt5ct'         , state: 'link' }
        - { src: 'config/sway/'         , dest: '.config/sway'          , state: 'link' }
        - { src: 'config/tox/toxic.conf', dest: '.config/tox/toxic.conf', state: 'link' }
        - { src: 'config/vifm/'         , dest: '.config/vifm'          , state: 'link' }
        - { src: 'config/vivid/'        , dest: '.config/vivid'         , state: 'link' }
        - { src: 'config/waybar/'       , dest: '.config/waybar'        , state: 'link' }
        - { src: 'config/wofi/'         , dest: '.config/wofi'          , state: 'link' }
        - { src: 'config/zathura/'      , dest: '.config/zathura'       , state: 'link' }
        - { src: 'curlrc'               , dest: '.config/curl/.curlrc'  , state: 'link' }
        - { src: 'gitconfig'            , dest: '.gitconfig'            , state: 'link' }
        - { src: 'gitconfig-remote'     , dest: '.gitconfig'            , state: 'link' }
        - { src: 'gitignore'            , dest: '.gitignore'            , state: 'link' }
        - { src: 'gnupg/gpg-agent.conf' , dest: '.gnupg/gpg-agent.conf' , state: 'link' }
        - { src: 'gnupg/gpg.conf'       , dest: '.gnupg/gpg.conf'       , state: 'link' }
        - { src: 'inputrc'              , dest: '.inputrc'              , state: 'link' }
        - { src: 'muttrc'               , dest: '.muttrc'               , state: 'link' }
        - { src: 'profile'              , dest: '.profile'              , state: 'link' }
        - { src: 'ripgreprc'            , dest: '.config/.ripgreprc'    , state: 'link' }
        - { src: 'ssh_config'           , dest: '.ssh/config'           , state: 'link' }
        - { src: 'terminfo/'            , dest: '.terminfo'             , state: 'link' }
        - { src: 'themes/'              , dest: '.themes'               , state: 'link' }
        - { src: 'tmux.conf'            , dest: '.tmux.conf'            , state: 'link' }
        - { src: 'vimrc'                , dest: '.vimrc'                , state: 'link' }
        - { src: 'weechat.conf'         , dest: 'weechat.conf'          , state: 'link' }
        - { src: 'wgetrc'               , dest: '.config/wgetrc'        , state: 'link' }


  - name: Execute `transfer_agent` role
    import_role:
      name: transfer_agent
    tags: role_transfer
    vars:
      tag_add_rsync: true             # Allow `rsync` in addition to sftp?
      tag_agent_group: agents
      tag_agent_name: xfer_agent
      tag_pubkey_from_current_user: true
      tag_pubkey_from_others: true
      tag_remove_existing_user: true  # Remove $HOME of the existing agent?


  - name: Execute Syncthing role
    import_role:
      name: syncthing
    tags: role_syncthing
    vars:
      st_install_client: True
      st_install_disco: True
      st_install_relay: True
      st_reinstall: true

      st_client: {
        'addr': '' ,                  # Address on which Client will listen, default: 127.0.0.1
        'addr_use_wan': true,         # Overwrite `st_client.addr` with the discovered WAN ip?
        'announce_broadcast': true,   # Enable "local discovery"?
        'certs_export': false,        # Upload existing certificates?
        'certs_import': false,        # Download existing certificates?
        'certs_recreate': true,
        'config_dir': '',             # Will be replaced with $XDG_CONFIG_HOME/syncthing if empty
        'gui': true,
        'gui_tls': true,
        'gui_user': 'foo',            # GUI/API username
        'gui_user_password', 'bar',   # GUI user password, will be hashed using BCrypt
        'min_free_space': 5,          # Minimum free disk space to keep
        'nat': false,                 # Uses upstream-controlled STUN
        'port': '',                   # Port on which Client's GUI/API will listen, default: 8384
        'reconfigure': true,          # Overwrite existing config?
        'untrusted': true,            # Set device as "untrusted" by default?

        'user': {
          'name': '',                 # Defaults to SSH user
          'home': '',                 # Will be replaced with $HOME if empty
          },

        'default_folder': {
          'path': '~/sync/default',   # Will be created if does not exist
          'type': 'sendreceive',      # `receiveencrypted` can't be set on the *default* folder
          'pause': True
          },

        'disco': {
          'addr': '127.0.0.1',        # Discovery-server to which Client will connect
          'addr_overwrite': true,     # Overwrite Disco address with the server from this role?
          'port': 8443,               # Port on which Client will try to find Disco, default: 8443
          'id': '',                   # ID of Disco to which Client will connect
          'id_overwrite': true,       # Overwrite `st_client.disco.id` with the `st_disco.id`?
          'enable': true              # Use "global announcements" aka Discovery-server?
          },

        'relay': {
          'enable': true,             # Enable relaying?
          'addr': '',
          'addr_overwrite': true,     # Overwrite Relay address with the server from this role?
          'port': 22067,
          'id': '',
          'id_overwrite': true,       # Overwrite `st_client.relay.id` with the `st_relay.id`?
          'reconnect_interval_minutes': 10
          },

        'start': {                    # Configure autostart via systemd
          'on_boot': true,
          'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
        },

        'binary': {
          'shasum': '03ba1fb7326d0893fc5664602694144bbdf7717a895fb554fe89fb996f116433',
          'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.2/syncthing',
          }
        }

      st_disco: {
        'addr': '127.0.0.1',         # Address on which Disco listens itself
        'addr_use_wan': true,        # Use discovered WAN IP instead of the provided address?
        'certs_export': false,       # Upload existing certificates?
        'certs_import': false,       # Download existing certificates?
        'certs_recreate': true,
        'id': '',                    # Disco's own ID, *will* be overwritten during run
        'port': '',                  # Port on which Disco will listen itself, default: 8443
        'replicate': false,          # Add `st_disco_replica` into the systemd config?

        'replica': {
          'addr': '10.0.0.1',        # Address which Disco will use for replication
          'port': 19200,             # Port which Disco will use for replication
          'id': '',                  # ID of another replica instance
          'listen_addr': '10.0.0.2', # Address for incoming replication connections
          'listen_port': 19200,      # Port for incoming replication connections, default: 19200
          },

        'start': {                   # Configure autostart via systemd
          'on_boot': true,
          'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
        },

        'binary': {
          'shasum': '6988838343dbf98eacb6678d551ae298fa85c1c0a4b0e2b2cff62e7228c442aa',
          'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.2/stdiscosrv',
          }
        }

      st_relay: {
        'addr': '',
        'addr_use_wan': true,
        'certs_export': false,       # Upload existing certificates?
        'certs_import': false,       # Download existing certificates?
        'certs_recreate': true,
        'network_timeout_string': '2m0s',
        'ping_interval_string': '1m0s',
        'port': 22067,

        'nat': {
          'enabled': false,          # Use UPnP/NAT-PMP to acquire external port mapping?
          'lease_minutes': 60,
          'renewal_minutes': 30,
          'timeout_seconds': 10
        },

        'start': {                   # Configure autostart via systemd
          'on_boot': true,
          'on_role_completion': 'restarted'   # Either: 'reloaded', 'restarted' or 'stopped'
        },

        'binary': {
          'shasum': '715525cb0e835153a1ff465f312009c2ffc4d5d28294d850018087ee5727d238',
          'url': 'https://github.com/savchenko/minisync/releases/download/v1.16.2/strelaysrv'
        }
      }


  - name: Execute `wireguard` role
    import_role:
      name: wireguard
    tags: role_wireguard
    vars:
      wg_endpoints:
        - { name: 'Foo',
            pubkey: 'sPHxX6IiLpcJpgDmoXRuAiuZdKNJsZtsIEDJGK6ubmU=',
            psk: 'g1p3GiazEwyEoM2RkYh148/bu0w4zXg6S1I8ybw3fT0=',
            ip: '10.2.0.1',
            port: '12335',
            keepalive: '0',
            allowedips: '10.2.0.0/16' }
        - { name: 'Bar',
            pubkey: 'sPHxX6IiLpcJpgDmoXRuAiuZdKNJsZtsIEDJGK6ubmU=',
            psk: 'g1p3GiazEwyEoM2RkYh148/bu0w4zXg6S1I8ybw3fT0=',
            ip: '10.3.0.1',
            port: '22345',
            keepalive: '45',
            allowedips: '10.3.0.0/16' }
      wg_clients:
        - { name: 'Flob',
            pubkey: 'WC5a0cSWATZwLsQH1REjGcQsomZyEtRTaAqyRK20emY=',
            psk: 'yKsg+u7zY9N5rjgR3YE6cSu90aFBpxEPA3uKzK9vJc0=',
            ip: '10.2.1.10',
            keepalive: '0' }
        - { name: 'Fred',
            pubkey: 'qOwMjZuaVjfmdCSoOQbTp8MPADN+yB5gjRAmddA7jUM=',
            psk: 'Fo1UMMLxbyPiYwrJ/vE7tqPa66gblskjIc5xyQPsXgg=',
            ip: '10.3.1.20',
            keepalive: '90' }
      wg_autostart: true
      wg_forward: true   # Forward between clients?
      wg_iface: wg8
      wg_overwrite: true # Overwrite existing config?
      wg_peerkey: OIxcoXM0NaNtsSZM7aNGDeqpUiQxkZ4+eG9OmLSFe3k=
      wg_port: 12345
      wg_server_ip: 10.0.0.10
      wg_server_subnet: '10.0.0.0/8'
      wg_ssh: true       # Allow incoming tcp/22 from WG subnet?
      wg_start: true     # Start WG at the end of play?
      wg_systemd: true   # Enable systemd unit on startup?


  - name: Execute `nginx` role
    import_role:
      name: nginx
    tags: role_nginx
    vars:
      ngx_cert_email: 'x@y.com' # LetsEncrypt notifications
      ngx_endpoints:            # Lists of domains to provision
        - 'example.com'
        - 'example.net'
      ngx_flavour: 'extras'     # `full`, `light` or `extras`?
      ngx_provision_https: True # Install certs from LetsEncrypt?
      ngx_resolver: '127.0.0.1' # Resolver to use for stapling


  - name: Execute `EteSync` role
    import_role:
      name: etesync
    tags: role_etesync
    vars:
      esc_admin: '' # Optional, will be auto-generated if empty
      esc_admin_email: 'admin@example.com'
      esc_admin_password: example_admin_password
      esc_cert_email: 'certs@example.com'
      esc_debug: False
      esc_hosts: ['etesync.example.com']
      esc_http_auth_pass: http_password
      esc_http_auth_user: http_user
      esc_path: '/var/www/esc_server'
      esc_provision_https: True
      esc_repository: 'https://github.com/etesync/server'
      esc_rm_existing: True
      esc_rootdir: '/var/www/html/esc_server'
      esc_user: 'www-uvicorn'
      esc_version: 'd11504093c0dff22e5371fada9037e6436abf628'
